# Copyright (c) 2022, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
#
# WSO2 LLC. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.

wso2:
  apk:
    cp:
      enabled: true
      postgresql:
        enabled: true
      ipk:
        enabled: true
      devportal:
        appName: "devportal-ds"
        deployment:
          npi: devportal-ds-npi
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /api/am/devportal/v2/apis?limit=2&offset=2
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /api/am/devportal/v2/apis?limit=2&offset=2
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: IfNotPresent
          image: rakhitharr/apk-devportal:0.1.0
        ingress:
          path: /api/am/devportal
          className: ""
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
      admin:
        appName: "admin-ds"
        deployment:
          npi: admin-ds-npi
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /api/am/admin/v3/settings?limit=2&offset=2
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /api/am/admin/v3/settings?limit=2&offset=2
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: IfNotPresent
          image: rakhitharr/apk-admin:0.1.0
        ingress:
          path: /api/am/admin
          className: ""
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
      publisher:
        appName: "publisher-ds"
        deployment:
          npi: publisher-ds-npi
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /api/am/publisher/v3/apis?limit=2&offset=2&sortBy=name&sortOrder=1
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /api/am/publisher/v3/apis?limit=2&offset=2&sortBy=name&sortOrder=1
            port: 9443
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: IfNotPresent
          image: rakhitharr/apk-publisher:0.1.0
        ingress:
          path: /api/am/publisher
          className: ""
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
      sts:
        appName: "sts-ds"
        deployment:
          npi: sts-ds-npi
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /health
            port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /health
            port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: IfNotPresent
          image: lakshithag/apk-sts
        ingress:
          path:  /api/am/sts
          className: ""
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
      devportalUI:
        appName: "devportal-ui"
        deployment:
          npi: devportal-ui-npi
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1028Mi"
              cpu: "1000m"
          readinessProbe:
            path: /
            port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          livenessProbe:
            path: /
            port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
          strategy: Recreate
          replicas: 1
          imagePullPolicy: Always
          image: chanaka3d/portals:linux1.0.0
        ingress:
          path:  /
          host: portal.ui.wso2
          className: ""
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            nginx.ingress.kubernetes.io/affinity: "cookie"
            nginx.ingress.kubernetes.io/session-cookie-name: "route"
            nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
      cnpg:
        npi: cnpg-npi
        instances: 1
        clusterName: cluster-example
        appUserPassword: password
        superUserPassword: password
postgresql:
  auth:
    postgresPassword: "test1"
  primary:
    initdb:
      scriptsConfigMap: postgres-initdb-scripts-configmap
      user: postgres
      password: "test1"
  image:
    debug: true
ipk:
  wso2:
    deployment:
      wso2is:
        replicas: 1
